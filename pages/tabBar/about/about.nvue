<template>
	<view class="uni-container">
		<uni-card>
					<template v-slot:title>
								<view style="padding:20px;">
									<text style="margin-bottom: 5px;font-size: 18px;">账号绑定列表
										<text style="font-size: 12px;margin-left: 10px;">当前登录账号:</text>
										<text style="font-size: 12px;" v-if="curuser.account">{{curuser.account}}</text>
									</text>
								</view>
					 </template>
		 <uni-list>
				<uni-list-item    >
					<template v-slot:header>
						   账号 
					 </template>
					 <template v-slot:footer>
						 操作
					 </template>
				</uni-list-item>
		 
		<uni-list-item  v-if="tableData.length>0" v-for="(item, index) in tableData" :key="index"  :width="nvueWidth">
				<template v-slot:header>
					{{ item.account }}
			  </template>
			  
				<template v-slot:footer>
					   <view class="uni-flex uni-row">
					                <view class="flex-item  "><button  size="mini" @click="unbindAccount(item.account)" type="default">解绑</button></view>
					                <view v-if="curuser.account!=item.account" class="flex-item  " style="padding-left:10px;"><button size="mini" type="primary" @click="changeAccount(item.account)" >登录</button></view>
					            </view>
				</template>
			 </uni-list-item>
		</uni-list>
		<view slot="actions" class="card-actions no-border">
							<view class="card-actions-item" style="float:right">
                                 <button style="margin:20px;"  @click="goValidatePage()">
									 登录其它账号
								 </button>
							 
							</view>
						</view>
						
       </uni-card>
	  
	</view>
	 
 
</template>

<script>
	import loginApi from '@/api/sys/login.js'
	import store from '@/store/index.js';//需要引入store
	export default {
			data() {
				return {
					placeholderStyle: "color:#757575;font-size:14px",
					styles: {
							color: '#000',
							borderColor: '#747474'
					},
					type:'center',
					tableData: [],
					curuser:{account:''}
				}
			},
			onShow() {
				this.getOpenUserlist();
			},
			methods: {
				getOpenUserlist(){
					var self=this;
					var openid=store.state.openid;
					loginApi.getOpenUserlist({'openid':openid,appType:loginApi.getAppType()}).then(data => { 
						  self.tableData=data; 
						  self.curuser=store.state.currentUser;
					});
				},
				unbindAccount(account){
					let self=this;
					uni.showModal({
						title:'提示',
						content:'解绑后需重新绑定,确认解除吗？',
						success:function(ress){
							if(ress.confirm){
								 var openid=store.state.openid;
								 loginApi.unbindWechat({'appType':loginApi.getAppType(),
								                        'account':account,
														'openid':openid}).then(data => { 
									// 获得数据
									if(data.isOk==true){
										uni.showToast({
											title:data.msg,
											icon:'none',
											duration:2000
										})
										if(self.curuser.account==account){
											//解绑当前登录的账号
											self.tableData=[];
											self.getOpenUserlist();
											//uni.removeStorageSync("currentuser")
											//uni.removeStorageSync("JSessionId");
											store.commit('setSessionid',null);
											store.commit('setCurrentUser',null);
											store.commit('setUserList',null);
											uni.navigateTo({
												url: '/pages/sys/validate/index'
											})
										}else{
											self.tableData=[];
											self.getOpenUserlist();
										}
									}else{
									  uni.showToast({
									    title: data.msg,
									    icon: 'none',
									    duration: 2000//持续的时间
									  })
									}
									
								});
							}
						}
					})
				},
				changeAccount(account){
					let self=this;
					var openid=this.$store.state.openid;//uni.getStorage('openid');
					var sessionid=this.$store.state.sessionid;//uni.getStorage('JSessionId');
					loginApi.changeLoginWechatApp({'openid':openid,
					                               'account':account,
												   'jsessionid':sessionid,
												   'appType':loginApi.getAppType()}).then(data => { 
							if(data){
								uni.showToast({
									icon:'none',
									duration:2000,
									title:'切换账号成功！'
								})
								store.commit('setSessionid',sessionid);
								//uni.setStorage("JSessionId", jsid);
								//跳转至 成功页面
							    store.commit('setCurrentUser',data.currentuser);
								self.curuser=data.currentuser;
								self.getOpenUserlist();
							}
					})
				},
				goValidatePage(){
					var datas="app";
					uni.navigateTo({
						url: '/pages/sys/validate/index?ftype='+datas
					})
				}
			}
		
	}
</script>

<style>
 
</style>
